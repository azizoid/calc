{"version":3,"sources":["assets/parse.params.js","components/navbar/navbar.component.jsx","components/currency-list/currency.component.jsx","components/localization.component.js","components/colors.component.js","components/currencyList.js","App.js","index.js"],"names":["parseParams","querystring","params","URLSearchParams","obj","keys","key","getAll","length","get","Navbar","className","href","width","height","viewBox","fill","xmlns","fillRule","d","CurrencyList","currList","setForm","equals","map","i","code","base","rate","target","style","cursor","onClick","prev","x1","x2","y1","y2","Localization","en","name","message","ru","rs","az","Colors","currencyList","App","useState","setCurrList","customCurrList","setCustomCurrList","symbols","setSymbols","form","setMessage","alert","setAlert","lang","setLang","text","bg","colors","setColors","format","Date","date","setDate","useEffect","document","body","backgroundColor","color","url","URL","window","location","search","fetch","then","response","json","doc","codes","data","filter","includes","toFixed","catch","error","Object","hasIn","custom_base","custom_target","custom_rate","isArray","last","custom","toString","replace","toUpperCase","tmp","forEach","arr","push","uniq","timer","setTimeout","clearTimeout","onHandlerChangeX","event","value","onHandlerChangeY","currency","find","htmlFor","id","type","placeholder","min","step","onChange","e","index","preventDefault","cellPadding","align","borderRight","sort","list","persist","ReactDOM","render","StrictMode","getElementById"],"mappings":"yQAaeA,EAbK,SAACC,GACnB,IADmC,EAC7BC,EAAS,IAAIC,gBAAgBF,GAC7BG,EAAM,GAFuB,cAGjBF,EAAOG,QAHU,IAGnC,2BAAiC,CAAC,IAAvBC,EAAsB,QAC3BJ,EAAOK,OAAOD,GAAKE,OAAS,EAC9BJ,EAAIE,GAAOJ,EAAOK,OAAOD,GAEzBF,EAAIE,GAAOJ,EAAOO,IAAIH,IAPS,8BAUnC,OAAOF,GCgBMM,G,MAtBA,kBACb,yBAAKC,UAAU,wDACb,uBAAGC,KAAK,IAAID,UAAU,qDACpB,yBACEE,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRJ,UAAU,iDACVK,KAAK,eACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,EAAE,kJAEJ,0BAAMA,EAAE,iuBAbZ,mCC0BWC,EA9BM,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACzC,OACE,2BAAOZ,UAAU,4CACf,+BACGU,GACCA,EAASG,KAAI,WAA+BC,GAA/B,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,OAArB,OACX,wBACEvB,IAAKmB,EACLK,MAAO,CAAEC,OAAQ,WACjBC,QAAS,WACPV,GAAQ,SAACW,GAAD,mBAAC,eACJA,GADG,IAENC,GAAI,EACJC,GAAIP,EACJQ,GAAIT,EACJU,GAAIR,SAIR,iCAAOF,GACP,4BAAKJ,GACL,gCAAMK,EAAO,IAAMC,GACnB,4BAAKH,UCOJY,EA/BM,CACnBC,GAAI,CACFC,KAAM,UACNjB,OAAQ,SACRI,KAAM,OACNE,OAAQ,SACRY,QAAS,kCAEXC,GAAI,CACFF,KAAM,sEACNjB,OAAQ,iCACRI,KAAM,6CACNE,OAAQ,qEACRY,QAAS,iJAEXE,GAAI,CACFH,KAAM,iEACNjB,OAAQ,wCACRI,KAAM,mDACNE,OAAQ,+DACRY,QAAS,4HAEXG,GAAI,CACFJ,KAAM,uBACNjB,OAAQ,uBACRI,KAAM,YACNE,OAAQ,6BACRY,QAAS,uCCJEI,EAvBA,CACb,CAAEL,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,SAAUd,KAAM,WACxB,CAAEc,KAAM,OAAQd,KAAM,WACtB,CAAEc,KAAM,MAAOd,KAAM,WACrB,CAAEc,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,OAAQd,KAAM,WACtB,CAAEc,KAAM,SAAUd,KAAM,WACxB,CAAEc,KAAM,SAAUd,KAAM,WACxB,CAAEc,KAAM,OAAQd,KAAM,WACtB,CAAEc,KAAM,SAAUd,KAAM,WACxB,CAAEc,KAAM,SAAUd,KAAM,WACxB,CAAEc,KAAM,aAAcd,KAAM,WAC5B,CAAEc,KAAM,QAASd,KAAM,WACvB,CAAEc,KAAM,UAAWd,KAAM,WACzB,CAAEc,KAAM,OAAQd,KAAM,WACtB,CAAEc,KAAM,QAASd,KAAM,UACvB,CAAEc,KAAM,QAASd,KAAM,YCJVoB,EAhBM,CAEnB,CAAEpB,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,WACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,UACpD,CAAEF,KAAM,SAAUC,KAAM,MAAOE,OAAQ,MAAOD,KAAM,WCoZvCmB,EApZH,WAAO,IAAD,EACgBC,mBAASF,GADzB,mBACTzB,EADS,KACC4B,EADD,OAE4BD,mBAAS,IAFrC,mBAETE,EAFS,KAEOC,EAFP,OAIcH,qBAJd,mBAITI,EAJS,KAIAC,EAJA,OAKQL,mBAAS,CAAEd,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAL5C,mBAKTiB,EALS,KAKHhC,EALG,OAMc0B,mBAAS,IANvB,mBAMTP,EANS,KAMAc,EANA,OAOUP,mBAAS,GAPnB,mBAOTQ,EAPS,KAOFC,EAPE,OAQQT,mBAAS,MARjB,mBAQTU,EARS,KAQHC,EARG,OASYX,mBAAS,CAAEY,KAAM,UAAWC,GAAI,YAT5C,mBASTC,EATS,KASDC,EATC,OAUQf,mBAASgB,YAAO,IAAIC,KAAQ,eAVpC,mBAUTC,EAVS,KAUHC,EAVG,KAYhBC,qBAAU,WACRC,SAASC,KAAKxC,MAAMyC,gBAAkBT,EAAOD,GAC7CQ,SAASC,KAAKxC,MAAM0C,MAAQV,EAAOF,OAClC,CAACE,IAEJM,qBAAU,WACR,IAAMK,EAAM,IAAIC,IAAIC,OAAOC,UACvB1E,EAASF,EAAYyE,EAAII,QA+B7B,GArBAC,MAAM,iCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,IAAMC,EAAQD,EAAIE,KAAK5D,KAAI,qBAAGE,QAC9BuB,GAAY,SAAChB,GAAD,4BACPiD,EAAIE,MADG,YAEPnD,EAAKoD,QAAO,gBAAG3D,EAAH,EAAGA,KAAH,OAAeyD,EAAMG,SAAS5D,OAFnC,YAGPwD,EAAIE,KAAK5D,KAAI,gBAAGG,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAT,MAA6B,CAC3CH,KAAMG,EAASF,EACfA,KAAME,EACNA,OAAQF,EACRC,MAAQ,EAJM,EAAiBA,KAIX,GAAG2D,QAAQ,YAGnCpB,EAAQe,EAAIhB,SAEbsB,OAAM,SAACC,OAKNC,OAAOrF,KAAKH,GAAQM,OAAS,IAC3BmF,gBAAMzF,EAAQ,UACZA,EAAOwD,QAAQpB,EACjBqB,EAAQzD,EAAOwD,MACVC,EAAQ,OAGbgC,gBAAMzF,EAAQ,SAChB6D,GAAU,SAAC9B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,KAAM1D,EAAO0D,UAG3C+B,gBAAMzF,EAAQ,OAChB6D,GAAU,SAAC9B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4B,GAAI3D,EAAO2D,QAK3C8B,gBAAMzF,EAAQ,gBACdyF,gBAAMzF,EAAQ,kBACdyF,gBAAMzF,EAAQ,gBACd,CAAC,IACK0F,EAA4C1F,EAA5C0F,YAAaC,EAA+B3F,EAA/B2F,cAAeC,EAAgB5F,EAAhB4F,YAClCF,EAAcG,kBAAQH,GAAeI,eAAKJ,GAAeA,EACzDC,EAAgBE,kBAAQF,GACpBG,eAAKH,GACLA,EACJC,EAAcC,kBAAQD,GAAeE,eAAKF,GAAeA,EAQzD,IAAMG,EAAS,CACb,CACEvE,MARJkE,EAAcA,EAAYM,WAAWC,QAAQ,MAAO,IAAIC,gBACxDP,EAAgBA,EACbK,WACAC,QAAQ,MAAO,IACfC,eAKCzE,KAAMiE,EACN/D,OAAQgE,EACRjE,MAAqB,EAAdkE,GAAiBP,QAAQ,IAElC,CACE7D,KAAMmE,EAAgBD,EACtB/D,OAAQ+D,EACRjE,KAAMkE,EACNjE,MAAQ,EAAIkE,EAAe,GAAGP,QAAQ,KAI1CpC,GAAkB,SAAClB,GAAD,gBAAcgE,EAAd,YAAyBhE,UAG9C,IAEHmC,qBAAU,WACRnB,GAAY,SAAChB,GAAD,4BAAcA,GAAd,YAAuBiB,SAClC,CAACA,IAEJkB,qBAAU,WACR,GAAI/C,EAASb,OAAS,EAAG,CACvB,IAAI6F,EAAM,GACVhF,EAASiF,SAAQ,SAACC,GAAD,OAASF,EAAIG,KAAKD,EAAI5E,KAAM4E,EAAI1E,WACjDwB,EAAWoD,eAAKJ,IAEhB/E,EAAQ,CACNY,GAAI,EACJC,GAAId,EAAS,GAAGO,KAChBQ,GAAIf,EAAS,GAAGM,KAChBU,GAAIhB,EAAS,GAAGQ,OAChBV,EAAG,OAGN,CAACE,IAEJ+C,qBAAU,WACR,IAAKZ,EAAO,OAAOD,EAAW,IAC9BA,EAAWjB,EAAaoB,GAAMjB,SAC9B,IAAMiE,EAAQC,YAAW,WACvBlD,EAAS,KACR,MACH,OAAO,WACLmD,aAAaF,MAEd,CAAClD,EAAOE,IAEXU,qBAAU,cAEP,CAACd,IAEJ,IAAMuD,EAAmB,SAACC,GAAW,IAAD,EACZA,EAAMjF,OAAtBW,EAD4B,EAC5BA,KAAMuE,EADsB,EACtBA,MAINrF,EAAgB,OAATc,EAAgBc,EAAKlB,GAAKkB,EAAKjB,GAAKiB,EAAKjB,GAAKiB,EAAKlB,GAG1DR,EAFWP,EAASgE,QAAO,SAACkB,GAAD,OAASA,EAAI7E,OAASA,KAEjC,GAAGE,KAErB1B,EAAS,GACA,OAATsC,EACFtC,EAAS,CAAEgC,GAAI6E,EAAO5E,IAAK4E,EAAQnF,GAAM2D,QAAQ,IAC/B,OAAT/C,IACTtC,EAAS,CAAEgC,IAAK6E,EAAQnF,GAAM2D,QAAQ,GAAIpD,GAAI4E,IAEhDzF,GAAQ,SAACW,GAAD,mBAAC,eAAeA,GAAS/B,OAG7B8G,EAAmB,SAACF,GAAW,IAAD,EACZA,EAAMjF,OAAtBW,EAD4B,EAC5BA,KAAMuE,EADsB,EACtBA,MAEZ,GAAa,OAATvE,EAAe,CACjB,GAAIuE,IAAUzD,EAAKjB,GAAI,OAEvB,IAAMX,EAAOqF,EAAQzD,EAAKjB,GACpB4E,EAAWC,eAAK7F,EAAU,CAAEK,KAAMA,IAExC,IAAKuF,EAEH,YADAxD,EAAS,GAEJF,EAAW,IAElBjC,GAAQ,SAACW,GAAD,mBAAC,eACJA,GADG,IAENC,IAAK+E,EAASrF,KAAOK,EAAKE,IAAIoD,QAAQ,GACtCnD,GAAI2E,YAED,GAAa,OAATvE,EAAe,CACxB,GAAIuE,IAAUzD,EAAKlB,GAAI,OAEvB,IAAMV,EAAO4B,EAAKlB,GAAK2E,EACjBE,EAAWC,eAAK7F,EAAU,CAAEK,KAAMA,IAExC,IAAKuF,EAEH,YADAxD,EAAS,GAEJF,EAAW,IAElBjC,GAAQ,SAACW,GAAD,mBAAC,eACJA,GADG,IAENE,IAAK8E,EAASrF,KAAOK,EAAKC,IAAIqD,QAAQ,GACtClD,GAAI0E,SAKV,OACE,yBAAKpG,UAAU,OACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACZ8B,EAAQjC,OAAS,GAChB,2BAAOG,UAAU,yCACd8B,GAGL,yBAAK9B,UAAU,uCACZ2C,EAAKpB,GACJ,IACAoB,EAAKlB,GACL,IACAE,EAAaoB,GAAMnC,OACnB,IACA+B,EAAKnB,GACL,IACAmB,EAAKjB,GACL,MACA6B,GAEJ,0BAAMvD,UAAU,aACd,yBAAKA,UAAU,YACb,2BAAOwG,QAAQ,KAAKxG,UAAU,oBAC3B2B,EAAaoB,GAAM/B,KADtB,KAGA,yBAAKhB,UAAU,oBACb,2BACEyG,GAAG,KACHC,KAAK,SACLC,YAAY,IACZC,IAAI,IACJC,KAAK,OACLT,MAAOzD,EAAKpB,GACZM,KAAK,KACL7B,UAAU,wBACV8G,SAAU,SAACC,GAAD,OAAOb,EAAiBa,OAGtC,yBAAK/G,UAAU,oBACb,4BACEA,UAAU,kBACVoG,MAAOzD,EAAKlB,GACZI,KAAK,KACLiF,SAAU,SAACC,GAAD,OAAOV,EAAiBU,KAEjCtE,GACCA,EAAQ5B,KAAI,SAACuF,EAAOY,GAAR,OACV,4BAAQZ,MAAOA,EAAOzG,IAAKqH,GACxBZ,OAIT,4BACEpG,UAAU,eACVqB,QAAS,SAAC0F,GACRA,EAAEE,iBACFtG,GAAQ,SAACW,GAAD,MAAW,CACjBC,GAAID,EAAKE,GACTA,GAAIF,EAAKC,GACTE,GAAIH,EAAKI,GACTA,GAAIJ,EAAKG,SAIb,yBACEvB,MAAM,MACNC,OAAO,MACPC,QAAQ,YACRJ,UAAU,qBACVK,KAAK,eACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,EAAE,6NAEJ,0BACED,SAAS,UACTC,EAAE,kNAMZ,yBAAKR,UAAU,YACb,2BAAOwG,QAAQ,KAAKxG,UAAU,oBAC3B2B,EAAaoB,GAAMnC,OADtB,KAGA,yBAAKZ,UAAU,oBACb,2BACE0G,KAAK,SACLC,YAAY,IACZC,IAAI,IACJC,KAAK,OACLT,MAAOzD,EAAKnB,GACZK,KAAK,KACL7B,UAAU,wBACV8G,SAAU,SAACC,GAAD,OAAOb,EAAiBa,OAGtC,yBAAK/G,UAAU,oBACb,4BACEA,UAAU,kBACVoG,MAAOzD,EAAKjB,GACZG,KAAK,KACLiF,SAAU,SAACC,GAAD,OAAOV,EAAiBU,KAEjCtE,GACCA,EAAQ5B,KAAI,SAACuF,EAAOY,GAAR,OACV,4BAAQZ,MAAOA,EAAOzG,IAAKqH,GACxBZ,UAQf,kBAAC,EAAD,CACE1F,SAAUA,EACVC,QAASA,EACTC,OAAQe,EAAaoB,GAAMnC,SAG7B,2BAAOZ,UAAU,qBAAqBkH,YAAa,IACjD,+BACE,4BACE,wBAAIC,MAAM,QAAQhG,MAAO,CAAEiG,YAAa,cACtC,2BAAOZ,QAAQ,YAAf,eAEF,4BACE,4BACE3E,KAAK,WACLuE,MAAOrD,EACP+D,SAAU,SAACC,GAAD,OAAO/D,EAAQ+D,EAAE7F,OAAOkF,SAEjC1G,eAAKiC,GACH0F,OACAxG,KAAI,SAACyG,EAAMxG,GAAP,OACH,4BAAQnB,IAAKmB,EAAGsF,MAAOkB,GACpB3F,EAAa2F,GAAMzF,aAOjCsB,GACC,+BACE,4BACE,wBAAIgE,MAAM,QAAQhG,MAAO,CAAEiG,YAAa,cACtC,2BAAOZ,QAAQ,aAAf,iBAEF,4BACE,4BACE3E,KAAK,YACLuE,MAAOjD,EAAOF,KACd6D,SAAU,SAACC,GACTA,EAAEQ,UACFnE,GAAU,SAAC9B,GAAD,mBAAC,eACNA,GADK,IAER2B,KAAM8D,EAAE7F,OAAOkF,aAIlBlE,EAAOmF,OAAOxG,KAAI,SAACgD,EAAO/C,GAAR,OACjB,4BAAQnB,IAAKmB,EAAGsF,MAAOvC,EAAM9C,MAC1B8C,EAAMhC,YAMjB,4BACE,wBAAIsF,MAAM,QAAQnH,UAAU,mBAC1B,2BAAOwG,QAAQ,WAAf,uBAEF,4BACE,4BACE3E,KAAK,UACLuE,MAAOjD,EAAOD,GACd4D,SAAU,SAACC,GACTA,EAAEQ,UACFnE,GAAU,SAAC9B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4B,GAAI6D,EAAE7F,OAAOkF,aAG9ClE,EAAOmF,OAAOxG,KAAI,SAACgD,EAAO/C,GAAR,OACjB,4BAAQnB,IAAKmB,EAAGsF,MAAOvC,EAAM9C,MAC1B8C,EAAMhC,kBC1YjC2F,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhE,SAASiE,eAAe,W","file":"static/js/main.88739fb8.chunk.js","sourcesContent":["const parseParams = (querystring) => {\n  const params = new URLSearchParams(querystring);\n  const obj = {};\n  for (const key of params.keys()) {\n    if (params.getAll(key).length > 1) {\n      obj[key] = params.getAll(key);\n    } else {\n      obj[key] = params.get(key);\n    }\n  }\n  return obj;\n};\n\nexport default parseParams;\n","import React from \"react\";\n\nimport \"./navbar.styles.scss\";\n\nconst Navbar = () => (\n  <nav className=\"header navbar navbar-expand-lg navbar-light bg-light\">\n    <a href=\"/\" className=\"navbar-brand d-flex align-items-center text-muted\">\n      <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 16 16\"\n        className=\"bi bi-calculator-fill d-inline-block align-top\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M12 1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM4 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H4z\"\n        />\n        <path d=\"M4 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5v-2zm0 4a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm0 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm0 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm0 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm0 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm3-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1zm0 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-4z\" />\n      </svg>\n      &nbsp; Currency Converter Tool\n    </a>\n  </nav>\n);\n\nexport default Navbar;\n","import React from \"react\";\n\nconst CurrencyList = ({ currList, setForm, equals }) => {\n  return (\n    <table className=\"table-hover table-sm col-sm-12 col-lg-6 \">\n      <tbody>\n        {currList &&\n          currList.map(({ code, base, rate, target }, i) => (\n            <tr\n              key={i}\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                setForm((prev) => ({\n                  ...prev,\n                  x1: 1,\n                  x2: rate,\n                  y1: base,\n                  y2: target,\n                }));\n              }}\n            >\n              <td>1 {base}</td>\n              <td>{equals}</td>\n              <td> {rate + \" \" + target}</td>\n              <td>{code}</td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default CurrencyList;\n","const Localization = {\n  en: {\n    name: \"English\",\n    equals: \"Equals\",\n    base: \"Base\",\n    target: \"Target\",\n    message: \"We dont have this currency yet\",\n  },\n  ru: {\n    name: \"Русский язык\",\n    equals: \"Равно\",\n    base: \"Главная\",\n    target: \"Конвертация\",\n    message: \"Эта валюта пока недоступна\",\n  },\n  rs: {\n    name: \"Српски jезик\",\n    equals: \"Jеднако\",\n    base: \"Главница\",\n    target: \"Преводница\",\n    message: \"Ова валута не постоjи jош\",\n  },\n  az: {\n    name: \"Azərbaycan dili\",\n    equals: \"Bərabərdir\",\n    base: \"Əsas\",\n    target: \"Köçürülmə\",\n    message: \"Bazamızda bu yazı yoxdur\",\n  },\n};\n\nexport default Localization;\n","const Colors = [\n  { name: \"White\", code: \"#FFFFFF\" },\n  { name: \"Yellow\", code: \"#FFFF00\" },\n  { name: \"Blue\", code: \"#0000FF\" },\n  { name: \"Red\", code: \"#FF0000\" },\n  { name: \"Green\", code: \"#008000\" },\n  { name: \"Black\", code: \"#000000\" },\n  { name: \"Brown\", code: \"#964B00\" },\n  { name: \"Azure\", code: \"#007FFF\" },\n  { name: \"Teal\", code: \"#008080\" },\n  { name: \"Silver\", code: \"#C0C0C0\" },\n  { name: \"Purple\", code: \"#800080\" },\n  { name: \"Gray\", code: \"#CCCCCC\" },\n  { name: \"Orange\", code: \"#FFA500\" },\n  { name: \"Maroon\", code: \"#800000\" },\n  { name: \"Aquamarine\", code: \"#00FFFF\" },\n  { name: \"Coral\", code: \"#FF7F50\" },\n  { name: \"Fuchsia\", code: \"#FF00FF\" },\n  { name: \"Lime\", code: \"#00FF00\" },\n  { name: \"Khaki\", code: \"#C9999\" },\n  { name: \"Olive\", code: \"#808000\" },\n];\n\nexport default Colors;\n","const currencyList = [\n  // { code: \"EUREUR\", base: \"EUR\", target: \"EUR\", rate: \"1\" },\n  { code: \"EURUSD\", base: \"EUR\", target: \"USD\", rate: \"1.2897\" },\n  { code: \"USDEUR\", base: \"USD\", target: \"EUR\", rate: \"0.7753\" },\n  { code: \"EURCHF\", base: \"EUR\", target: \"CHF\", rate: \"1.3135\" },\n  { code: \"CHFEUR\", base: \"CHF\", target: \"EUR\", rate: \"0.7613\" },\n  { code: \"EURGBP\", base: \"EUR\", target: \"GBP\", rate: \"0.8631\" },\n  { code: \"GBPEUR\", base: \"GBP\", target: \"EUR\", rate: \"1.1586\" },\n  { code: \"USDJPY\", base: \"USD\", target: \"JPY\", rate: \"109.620\" },\n  { code: \"JPYUSD\", base: \"JPY\", target: \"USD\", rate: \"0.0091\" },\n  { code: \"CHFUSD\", base: \"CHF\", target: \"USD\", rate: \"0.9960\" },\n  { code: \"USDCHF\", base: \"USD\", target: \"CHF\", rate: \"1.0040\" },\n  { code: \"GBPCAD\", base: \"GBP\", target: \"CAD\", rate: \"1.7574\" },\n  { code: \"CADGBP\", base: \"CAD\", target: \"GBP\", rate: \"0.5690\" },\n];\n\nexport default currencyList;\n","import React, { useEffect, useState } from \"react\";\nimport { hasIn, isArray, last, keys, uniq, find } from \"lodash\";\nimport { format } from \"date-fns\";\n\nimport parseParams from \"./assets/parse.params.js\";\n\nimport Navbar from \"./components/navbar/navbar.component\";\nimport CurrencyList from \"./components/currency-list/currency.component\";\n\nimport Localization from \"./components/localization.component\";\nimport Colors from \"./components/colors.component\";\nimport currencyList from \"./components/currencyList\";\n\nconst App = () => {\n  const [currList, setCurrList] = useState(currencyList);\n  const [customCurrList, setCustomCurrList] = useState([]);\n\n  const [symbols, setSymbols] = useState();\n  const [form, setForm] = useState({ x1: 1, x2: 1, y1: 1, y2: 1 });\n  const [message, setMessage] = useState(\"\");\n  const [alert, setAlert] = useState(0);\n  const [lang, setLang] = useState(\"en\");\n  const [colors, setColors] = useState({ text: \"#000000\", bg: \"#FFFFFF\" });\n  const [date, setDate] = useState(format(new Date(), \"yyyy-MM-dd\"));\n\n  useEffect(() => {\n    document.body.style.backgroundColor = colors.bg;\n    document.body.style.color = colors.text;\n  }, [colors]);\n\n  useEffect(() => {\n    const url = new URL(window.location);\n    let params = parseParams(url.search);\n\n    /*\n    I created a small api for currencies taken from the \n    https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml\n\n    if it succeed, then this data will be our default values,\n    and immedeately create their reverse currency conversion.\n    if for some reason there will be a problem, then we use the data you provided in a task\n    */\n    fetch(\"https://good.rs/currency/api/\")\n      .then((response) => response.json())\n      .then((doc) => {\n        const codes = doc.data.map(({ code }) => code);\n        setCurrList((prev) => [\n          ...doc.data,\n          ...prev.filter(({ code }) => !codes.includes(code)),\n          ...doc.data.map(({ base, target, rate }) => ({\n            code: target + base,\n            base: target,\n            target: base,\n            rate: ((1 / rate) * 1).toFixed(4),\n          })),\n        ]);\n        setDate(doc.date);\n      })\n      .catch((error) => {\n        // setCurrList((prev) => [...prev, ...currencyList]);\n        // console.error(\"Error:\", error);\n      });\n\n    if (Object.keys(params).length > 0) {\n      if (hasIn(params, \"lang\")) {\n        if (params.lang in Localization) {\n          setLang(params.lang);\n        } else setLang(\"en\");\n      }\n\n      if (hasIn(params, \"text\")) {\n        setColors((prev) => ({ ...prev, text: params.text }));\n      }\n\n      if (hasIn(params, \"bg\")) {\n        setColors((prev) => ({ ...prev, bg: params.bg }));\n      }\n\n      // const custom = hasIn(params, \"custom\") ? params.custom.split(\":\") : {};\n      if (\n        hasIn(params, \"custom_base\") &&\n        hasIn(params, \"custom_target\") &&\n        hasIn(params, \"custom_rate\")\n      ) {\n        let { custom_base, custom_target, custom_rate } = params;\n        custom_base = isArray(custom_base) ? last(custom_base) : custom_base;\n        custom_target = isArray(custom_target)\n          ? last(custom_target)\n          : custom_target;\n        custom_rate = isArray(custom_rate) ? last(custom_rate) : custom_rate;\n\n        custom_base = custom_base.toString().replace(/\\W/g, \"\").toUpperCase();\n        custom_target = custom_target\n          .toString()\n          .replace(/\\W/g, \"\")\n          .toUpperCase();\n\n        const custom = [\n          {\n            code: custom_base + custom_target,\n            base: custom_base,\n            target: custom_target,\n            rate: (custom_rate * 1).toFixed(4),\n          },\n          {\n            code: custom_target + custom_base,\n            target: custom_base,\n            base: custom_target,\n            rate: ((1 / custom_rate) * 1).toFixed(4),\n          },\n        ];\n\n        setCustomCurrList((prev) => [...custom, ...prev]);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setCurrList((prev) => [...prev, ...customCurrList]);\n  }, [customCurrList]);\n\n  useEffect(() => {\n    if (currList.length > 1) {\n      let tmp = [];\n      currList.forEach((arr) => tmp.push(arr.base, arr.target));\n      setSymbols(uniq(tmp));\n\n      setForm({\n        x1: 1,\n        x2: currList[0].rate,\n        y1: currList[0].base,\n        y2: currList[0].target,\n        d: 0,\n      });\n    }\n  }, [currList]);\n\n  useEffect(() => {\n    if (!alert) return setMessage(\"\");\n    setMessage(Localization[lang].message);\n    const timer = setTimeout(() => {\n      setAlert(0);\n    }, 1500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [alert, lang]);\n\n  useEffect(() => {\n    // console.log(form);\n  }, [form]);\n\n  const onHandlerChangeX = (event) => {\n    let { name, value } = event.target;\n    // value = value.replace(/[.]/g, \",\");\n    // value = value > 0 ? value * 1 : 0;\n\n    const code = name === \"x1\" ? form.y1 + form.y2 : form.y2 + form.y1;\n    const currency = currList.filter((arr) => arr.code === code);\n\n    const rate = currency[0].rate;\n\n    let params = {};\n    if (name === \"x1\") {\n      params = { x1: value, x2: (value * rate).toFixed(4) };\n    } else if (name === \"x2\") {\n      params = { x1: (value * rate).toFixed(4), x2: value };\n    }\n    setForm((prev) => ({ ...prev, ...params }));\n  };\n\n  const onHandlerChangeY = (event) => {\n    let { name, value } = event.target;\n\n    if (name === \"y1\") {\n      if (value === form.y2) return;\n\n      const code = value + form.y2;\n      const currency = find(currList, { code: code });\n\n      if (!currency) {\n        setAlert(1);\n        return;\n      } else setMessage(\"\");\n\n      setForm((prev) => ({\n        ...prev,\n        x1: (currency.rate * prev.x2).toFixed(4),\n        y1: value,\n      }));\n    } else if (name === \"y2\") {\n      if (value === form.y1) return;\n\n      const code = form.y1 + value;\n      const currency = find(currList, { code: code });\n\n      if (!currency) {\n        setAlert(1);\n        return;\n      } else setMessage(\"\");\n\n      setForm((prev) => ({\n        ...prev,\n        x2: (currency.rate * prev.x1).toFixed(4),\n        y2: value,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"d-none d-lg-block\">\n        <Navbar />\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          {message.length > 0 && (\n            <small className=\"col-12 alert alert-danger text-center\">\n              {message}\n            </small>\n          )}\n          <div className=\"col-12 text-center alert alert-info\">\n            {form.x1 +\n              \" \" +\n              form.y1 +\n              \" \" +\n              Localization[lang].equals +\n              \" \" +\n              form.x2 +\n              \" \" +\n              form.y2 +\n              \" / \" +\n              date}\n          </div>\n          <form className=\"col-sm-12\">\n            <div className=\"form-row\">\n              <label htmlFor=\"x1\" className=\"form-group col-4\">\n                {Localization[lang].base}:\n              </label>\n              <div className=\"form-group col-4\">\n                <input\n                  id=\"x1\"\n                  type=\"number\"\n                  placeholder=\"1\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  value={form.x1}\n                  name=\"x1\"\n                  className=\"form-control-sm w-100\"\n                  onChange={(e) => onHandlerChangeX(e)}\n                />\n              </div>\n              <div className=\"form-group col-4\">\n                <select\n                  className=\"form-control-sm\"\n                  value={form.y1}\n                  name=\"y1\"\n                  onChange={(e) => onHandlerChangeY(e)}\n                >\n                  {symbols &&\n                    symbols.map((value, index) => (\n                      <option value={value} key={index}>\n                        {value}\n                      </option>\n                    ))}\n                </select>\n                <button\n                  className=\"btn btn-link\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setForm((prev) => ({\n                      x1: prev.x2,\n                      x2: prev.x1,\n                      y1: prev.y2,\n                      y2: prev.y1,\n                    }));\n                  }}\n                >\n                  <svg\n                    width=\"1em\"\n                    height=\"1em\"\n                    viewBox=\"0 0 16 16\"\n                    className=\"bi bi-arrow-repeat\"\n                    fill=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M2.854 7.146a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L2.5 8.207l1.646 1.647a.5.5 0 0 0 .708-.708l-2-2zm13-1a.5.5 0 0 0-.708 0L13.5 7.793l-1.646-1.647a.5.5 0 0 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0 0-.708z\"\n                    />\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M8 3a4.995 4.995 0 0 0-4.192 2.273.5.5 0 0 1-.837-.546A6 6 0 0 1 14 8a.5.5 0 0 1-1.001 0 5 5 0 0 0-5-5zM2.5 7.5A.5.5 0 0 1 3 8a5 5 0 0 0 9.192 2.727.5.5 0 1 1 .837.546A6 6 0 0 1 2 8a.5.5 0 0 1 .501-.5z\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <label htmlFor=\"x2\" className=\"form-group col-4\">\n                {Localization[lang].equals}:\n              </label>\n              <div className=\"form-group col-4\">\n                <input\n                  type=\"number\"\n                  placeholder=\"1\"\n                  min=\"0\"\n                  step=\"0.01\"\n                  value={form.x2}\n                  name=\"x2\"\n                  className=\"form-control-sm w-100\"\n                  onChange={(e) => onHandlerChangeX(e)}\n                />\n              </div>\n              <div className=\"form-group col-4\">\n                <select\n                  className=\"form-control-sm\"\n                  value={form.y2}\n                  name=\"y2\"\n                  onChange={(e) => onHandlerChangeY(e)}\n                >\n                  {symbols &&\n                    symbols.map((value, index) => (\n                      <option value={value} key={index}>\n                        {value}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n          </form>\n\n          <CurrencyList\n            currList={currList}\n            setForm={setForm}\n            equals={Localization[lang].equals}\n          />\n\n          <table className=\"col-sm-12 col-lg-6\" cellPadding={10}>\n            <tbody>\n              <tr>\n                <td align=\"right\" style={{ borderRight: \"1px solid\" }}>\n                  <label htmlFor=\"language\">Language: </label>\n                </td>\n                <td>\n                  <select\n                    name=\"language\"\n                    value={lang}\n                    onChange={(e) => setLang(e.target.value)}\n                  >\n                    {keys(Localization)\n                      .sort()\n                      .map((list, i) => (\n                        <option key={i} value={list}>\n                          {Localization[list].name}\n                        </option>\n                      ))}\n                  </select>\n                </td>\n              </tr>\n            </tbody>\n            {colors && (\n              <tfoot>\n                <tr>\n                  <td align=\"right\" style={{ borderRight: \"1px solid\" }}>\n                    <label htmlFor=\"TextColor\">Text Color: </label>\n                  </td>\n                  <td>\n                    <select\n                      name=\"TextColor\"\n                      value={colors.text}\n                      onChange={(e) => {\n                        e.persist();\n                        setColors((prev) => ({\n                          ...prev,\n                          text: e.target.value,\n                        }));\n                      }}\n                    >\n                      {Colors.sort().map((color, i) => (\n                        <option key={i} value={color.code}>\n                          {color.name}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n                <tr>\n                  <td align=\"right\" className=\"td-right-border\">\n                    <label htmlFor=\"BgColor\">Background Color: </label>\n                  </td>\n                  <td>\n                    <select\n                      name=\"BgColor\"\n                      value={colors.bg}\n                      onChange={(e) => {\n                        e.persist();\n                        setColors((prev) => ({ ...prev, bg: e.target.value }));\n                      }}\n                    >\n                      {Colors.sort().map((color, i) => (\n                        <option key={i} value={color.code}>\n                          {color.name}\n                        </option>\n                      ))}\n                    </select>\n                  </td>\n                </tr>\n              </tfoot>\n            )}\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\n// import \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}